---
import Layout from "../../../layouts/Layout.astro";
import type { FolderTreeNode, ActivityTreeNode, AnyTreeNode } from "../../../types";
import ActivityTree from "../../../components/ActivityTree.svelte";

const { moduleId } = Astro.params as Record<"moduleId", string>;

const repo = Astro.locals.repo;
const module = await repo.module(moduleId);
const activityFolders = await repo.activityFolders(moduleId);
const activities = await repo.activities(moduleId);

const allNodes = [
  ...activityFolders.map((f): FolderTreeNode => ({ ...f, isFolder: true, children: [] })),
  ...activities.map((act): ActivityTreeNode => ({ ...act, isFolder: false })),
];

// Construct the activity tree
const allNodesByParent: Map<string | null | undefined, AnyTreeNode[]> = allNodes.reduce((acc, node) => {
  const parentId = node.isFolder ? node.parentId : node.folderId;
  const siblings = acc.get(parentId) || [];
  siblings.push(node);
  acc.set(parentId, siblings);
  return acc;
}, new Map<string | null | undefined, AnyTreeNode[]>());
---

<Layout>
  <div class="flex h-full">
    <nav class="h-full max-w-97 p-6 pb-10 overflow-y-scroll bg-stone-800 border-r border-stone-700">
      <div class="mb-6 grid grid-cols-[max-content_auto] gap-x-3">
        <img src={module.imageIconURL} alt="" class="w-9 h-9 object-cover rounded-md row-span-2" />
        <p class="font-semibold text-xl leading-none">{module.niceCode || module.code}</p>
        <p class="text-xs text-stone-300">{module.niceName || module.name}</p>
      </div>

      <ActivityTree {allNodesByParent} />
    </nav>
  </div>
</Layout>
